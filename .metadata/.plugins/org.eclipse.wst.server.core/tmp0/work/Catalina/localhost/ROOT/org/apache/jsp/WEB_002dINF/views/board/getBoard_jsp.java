/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-14 06:42:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class getBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1685078613648L));
    _jspx_dependants.put("jar:file:/C:/yhb_work/springFramework/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/_26_Spring_Board_FileUpload/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }/header.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\r\n");
      out.write("	<div style=\"display: flex; flex-direction: column; justify-content: center; align-items: center;\">\r\n");
      out.write("		<h3>게시글 상세</h3>\r\n");
      out.write("		<form id=\"updateForm\" action=\"/board/updateBoard.do\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("			<input type=\"hidden\" name=\"boardNo\" id=\"boardNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("			<input type=\"hidden\" name=\"originFiles\" id=\"originFiles\">\r\n");
      out.write("			<table border=\"1\" style=\"border-collapse: collapse;\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue; width: 70px\">\r\n");
      out.write("						제목\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left\">\r\n");
      out.write("						<input type=\"text\" name=\"boardTitle\" id=\"boardTitle\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue;\">\r\n");
      out.write("						작성자\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left\">\r\n");
      out.write("						<input type=\"text\" name=\"boardWriter\" id=\"boardWriter\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardWriter }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" readonly>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue;\">\r\n");
      out.write("						내용\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left\">\r\n");
      out.write("						<textarea name=\"boardContent\" id=\"boardContent\" cols=\"40\" rows=\"10\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue;\">\r\n");
      out.write("						작성일\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left\">\r\n");
      out.write("						");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardRegdate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue;\">\r\n");
      out.write("						조회수\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left\">\r\n");
      out.write("						");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardCnt }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("	\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"background: skyblue; width:70px;\">\r\n");
      out.write("						첨부파일\r\n");
      out.write("					</td>\r\n");
      out.write("					<td style=\"text-align: left;\">\r\n");
      out.write("						<div id=\"image_preview\">\r\n");
      out.write("							<input type=\"file\" id=\"btnAtt\" name=\"uploadFiles\" multiple>\r\n");
      out.write("							<input type=\"file\" id=\"changedFiles\" name=\"changedFiles\" \r\n");
      out.write("							style=\"display:none;\" multiple>\r\n");
      out.write("							<p style=\"color: red; font-size:0.9rem;\">\r\n");
      out.write("								파일을 변경하려면 사진을 파일을 다운로드하려면 파일명을 클릭하세요.\r\n");
      out.write("							</p>\r\n");
      out.write("							<div id=\"attZone\">\r\n");
      out.write("								");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr id=\"btnWrap\">\r\n");
      out.write("					<td colspan=\"2\" align=\"center\">\r\n");
      out.write("						<button type=\"submit\" id=\"btnUpdate\">수정</button>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<hr/>\r\n");
      out.write("		<a href=\"/board/insertBoard.do\">글 등록</a>\r\n");
      out.write("		<a href=\"/board/deleteBoard.do?boardNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"btnDelete\">글 삭제</a>\r\n");
      out.write("		<a href=\"/board/getBoardList.do\">글 목록</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }/footer.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		//추가된 파일을 담아줄 배열\r\n");
      out.write("		const uploadFiles = [];\r\n");
      out.write("		//기존 첨부파일 배열\r\n");
      out.write("		const originFiles = [];\r\n");
      out.write("		//변경된 첨부파일 배열\r\n");
      out.write("		const changedFiles = [];\r\n");
      out.write("	\r\n");
      out.write("		$(function() {\r\n");
      out.write("			//세션, 리퀘스트, 모델에 담긴 값을 javascript에서 사용\r\n");
      out.write("			const loginUser = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			const boardWriter = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardWriter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			\r\n");
      out.write("			//게시글 작성자와 로그인된 유저가 다르면 수정버튼 숨김\r\n");
      out.write("			if(loginUser !== boardWriter) {\r\n");
      out.write("				$(\"#btnUpdate\").hide();\r\n");
      out.write("				$(\"#btnDelete\").hide();\r\n");
      out.write("				$(\"#boardTitle\").attr(\"readonly\", true);\r\n");
      out.write("				$(\"#boardContent\").attr(\"readonly\", true);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//input type=\"file\"이 변경되면 미리보기 동작\r\n");
      out.write("			$(\"#btnAtt\").on(\"change\", (e) => { \r\n");
      out.write("				//input에 추가된 파일들 변수로 받기\r\n");
      out.write("				const files = e.target.files;\r\n");
      out.write("				\r\n");
      out.write("				//변수로 받아온 파일들 배열로 변환\r\n");
      out.write("				const fileArr = Array.prototype.slice.call(files);\r\n");
      out.write("				\r\n");
      out.write("				//파일 배열에 담긴 파일들 하나씩 꺼내서 미리보기 처리\r\n");
      out.write("				for(f of fileArr) {\r\n");
      out.write("					//미리보기 메소드 호출\r\n");
      out.write("					imageLoader(f);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			//기존 첨부되어 있던 파일 배열 생성\r\n");
      out.write("			for(let i = 0; i < $(\"#boardFileCnt\").val(); i++) {\r\n");
      out.write("				const originFileObj = {\r\n");
      out.write("						boardNo: $(\"#boardNo\" + i).val(),\r\n");
      out.write("						boardFileNo: $(\"#boardFileNo\" + i).val(),\r\n");
      out.write("						boardFileName: $(\"#boardFileName\" + i).val(),\r\n");
      out.write("						//수정되면 U, 삭제되면 D\r\n");
      out.write("						boardFileStatus: \"N\"\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				originFiles.push(originFileObj);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//updateForm 서브민\r\n");
      out.write("			$(\"updateForm\").on(\"submit\", (e) => {\r\n");
      out.write("				//배열 담겨있는 파일ㄷ르을 input으로 옮겨서 submit\r\n");
      out.write("				dt = new DataTransfer();\r\n");
      out.write("				\r\n");
      out.write("				for(f in uploadFiles){\r\n");
      out.write("					let file = uploadFiles[f];\r\n");
      out.write("					dt.items.add(file);\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(\"#btnAtt\")[0].files = dt.files;\r\n");
      out.write("				\r\n");
      out.write("				//수정된 파일들(changedFiles 배열) input으로 옮겨 담기\r\n");
      out.write("				dt2 = new DataTransfer();\r\n");
      out.write("				\r\n");
      out.write("				for(f in chagedFiles){\r\n");
      out.write("					let file = changedFiles[f];\r\n");
      out.write("					dt2.items.add(file);\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(\"#changedFiles\")[0].files = dt2.files;\r\n");
      out.write("				\r\n");
      out.write("				console.log(originFiles.val());\r\n");
      out.write("				\r\n");
      out.write("				//originFiles 배열을 전송하기 위해 input에 담음\r\n");
      out.write("				//javascript 배열을 java에서 받아서 바로 사용 불가능하므로\r\n");
      out.write("				//String으로 변경해서 보내줘야 함\r\n");
      out.write("				$(\"#originFiles\").val(JSON.stringify(originFiles));\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		const fnFileDown = (boardNo, boardFileNo) => {\r\n");
      out.write("			window.location = \"/board/fileDown.do?boardNo=\" \r\n");
      out.write("					+ boardNo + \"&boardFileNo=\" + boardFileNo; \r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//미리보기 메소드\r\n");
      out.write("		//미리보기 영역에 들어갈 img 태그 생성 및 선택된 파일을 \r\n");
      out.write("		//Base 64 인코딩된 문자열 형태로 변환하여 미리보기 구현\r\n");
      out.write("		const imageLoader = (file) => {\r\n");
      out.write("			//첨부파일 배열에 추가\r\n");
      out.write("			uploadFiles.push(file);\r\n");
      out.write("			\r\n");
      out.write("			let reader = new FileReader();\r\n");
      out.write("			\r\n");
      out.write("			reader.onload = (e) => {\r\n");
      out.write("				//이미지 표출할 img 태그 생성\r\n");
      out.write("				let img = document.createElement(\"img\");\r\n");
      out.write("				img.setAttribute(\"style\", \"width: 100%; height: 100%; z-index: none;\");\r\n");
      out.write("				\r\n");
      out.write("				//이미지 파일인지 아닌지 체크\r\n");
      out.write("				if(file.name.toLowerCase().match(/(.*?)\\.(jpg|jpeg|png|gif|svg|bmp)$/)) {\r\n");
      out.write("					img.src = e.target.result;\r\n");
      out.write("				} else {\r\n");
      out.write("					img.src = 'images/defaultFileImg.png';\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				//미리보기 영역에 추가\r\n");
      out.write("				//미리보기 이미지 태그와 삭제 버튼 그리고 파일명을 표출하는 p태그\r\n");
      out.write("				//묶어주는 div를 만들어서 미리보기 영역에 추가\r\n");
      out.write("				$(\"#attZone\").append(makeDiv(img, file));\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//파일을 BASE 64 인코딩 문자열로 변경\r\n");
      out.write("			reader.readAsDataURL(file);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("		//미리보기 영역에 들어갈 div 생성하는 메소드\r\n");
      out.write("		const makeDiv = (img, file) => {\r\n");
      out.write("			//div 태그 생성\r\n");
      out.write("			let div = document.createElement(\"div\");\r\n");
      out.write("			\r\n");
      out.write("			div.setAttribute(\"style\", \"display: inline-block;\" \r\n");
      out.write("			+ \" position: relative;\"\r\n");
      out.write("			+ \" width: 150px; height: 120px;\" \r\n");
      out.write("			+ \" margin: 5px; border: 1px solid #00f; z-index: 1\");\r\n");
      out.write("			\r\n");
      out.write("			//잘못 올렸을 경우 삭제할 수 있는 버튼 생성\r\n");
      out.write("			let btn = document.createElement(\"input\");\r\n");
      out.write("			btn.setAttribute(\"type\", \"button\");\r\n");
      out.write("			btn.setAttribute(\"value\", \"x\");\r\n");
      out.write("			btn.setAttribute(\"delFile\", file.name);\r\n");
      out.write("			btn.setAttribute(\"style\", \"width: 30px; height: 30px;\"\r\n");
      out.write("			+ \" position: absolute; right: 0px; bottom: 0px;\"\r\n");
      out.write("			+ \" z-index: 999; background-color: rgba(255, 255, 255, 0.1);\"\r\n");
      out.write("			+ \" color: #f00;\");\r\n");
      out.write("			\r\n");
      out.write("			//버튼 이벤트 생성\r\n");
      out.write("			//버튼 클릭하면 해당 파일삭제 기능 구현\r\n");
      out.write("			btn.onclick = (e) => {\r\n");
      out.write("				//클릭된 버튼\r\n");
      out.write("				const ele = e.srcElement;\r\n");
      out.write("				\r\n");
      out.write("				const delFile = ele.getAttribute(\"delFile\");\r\n");
      out.write("				\r\n");
      out.write("				for(let i = 0; i < uploadFiles.length; i++) {\r\n");
      out.write("					//배열에 담겨있는 파일중 파일명이 같은 파일 삭제\r\n");
      out.write("					if(delFile === uploadFiles[i].name) {\r\n");
      out.write("						//배열에서 i번째 하나 제거\r\n");
      out.write("						uploadFiles.splice(i, 1);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				//버튼 클릭 시 btnAtt 인풋에서도 첨부된 파일 삭제\r\n");
      out.write("				//input type=\"file\"은 첨부된 파일을 fileList의 형태로 관리\r\n");
      out.write("				//fileList에는 일반적인 File 객체를 넣을 수 없다.\r\n");
      out.write("				//DataTransfer라는 클래스를 이용해서 완전한 fileList 형태로 만들어서\r\n");
      out.write("				//input.files에 넣어줘야 한다.\r\n");
      out.write("				\r\n");
      out.write("				dt = new DataTransfer();\r\n");
      out.write("				\r\n");
      out.write("				for(f in uploadFiles) {\r\n");
      out.write("					const file = uploadFiles[f];\r\n");
      out.write("					dt.items.add(file);\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(\"#btnAtt\")[0].files = dt.files;\r\n");
      out.write("				\r\n");
      out.write("				//해당 img 태그를 담고 있는 div 삭제\r\n");
      out.write("				const parentDiv = ele.parentNode;\r\n");
      out.write("				$(parentDiv).remove();\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//파일명 표출할 p태그 생성\r\n");
      out.write("			const fName = document.createElement(\"p\");\r\n");
      out.write("			fName.setAttribute(\"style\", \"display: inline-block; font-size: 8px;\");\r\n");
      out.write("			fName.textContent = file.name;\r\n");
      out.write("			\r\n");
      out.write("			//div에 하나씩 추가\r\n");
      out.write("			div.appendChild(img);\r\n");
      out.write("			div.appendChild(btn);\r\n");
      out.write("			div.appendChild(fName);\r\n");
      out.write("			\r\n");
      out.write("			//완성된 div 리턴\r\n");
      out.write("			return div;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//img 태그 클릭시 숨어있는 input type=\"file\"이 클릭되어\r\n");
      out.write("		//첨부파일 팝업이 뜨게 해주는 메소드\r\n");
      out.write("		const fnImageChange = (boardFileNo) => {\r\n");
      out.write("			//boardFileNo에 해당하는 input type=\"file\"을 가져옴\r\n");
      out.write("			const changeFile = \r\n");
      out.write("				document.getElementById(\"changedFile\" + boardFileNo);\r\n");
      out.write("			//선택된 input을 강제 클릭\r\n");
      out.write("			changeFile.click();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		const fnGetChangedFileInfo = (boardFileNo, e) => {\r\n");
      out.write("			//변경된 파일 받아오기\r\n");
      out.write("			const files= e.target.files;\r\n");
      out.write("			\r\n");
      out.write("			//받아온 파일 배열로 변경\r\n");
      out.write("			const fileArr = Array.prototype.slice.call(files);\r\n");
      out.write("			\r\n");
      out.write("			//변경된 파일을 changeFiles 배열에 담아줌\r\n");
      out.write("			changedFiles.push(fileArr[0]);\r\n");
      out.write("			\r\n");
      out.write("			//미리보기 화면에서 변경된 파일 출력\r\n");
      out.write("			const reader = new FileReader();\r\n");
      out.write("			\r\n");
      out.write("			reader.onload = function(ee) {\r\n");
      out.write("				const img = document.getElementById(\"img\" + boardFileNo);\r\n");
      out.write("				const p = document.getElementById(\"fileName\" + boardFileNo);\r\n");
      out.write("				\r\n");
      out.write("				//이미지인지 체크\r\n");
      out.write("				if(fileArr[0].name.match(/(.*?)\\.(jpg|jpeg|png|gif|bmp|svg)$/)){\r\n");
      out.write("					img.src = ee.target.result;\r\n");
      out.write("				}else{\r\n");
      out.write("					img.src = '/images/defaultFileImg.png';					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			reader.readAsDataURL(fileArr[0]);\r\n");
      out.write("					\r\n");
      out.write("			//기존 파일 담고있는 배열(originFiles)에서 변경된 파일에 대한 정보 수정\r\n");
      out.write("			for(let i = 0; i < originFiles.length; i++){\r\n");
      out.write("				if(boardFileNo == originFiles[i].boardFileNo){\r\n");
      out.write("					originFiles[i].boardFileStatus = \"U\";\r\n");
      out.write("					originFiles[i].newFileName = fileArr[0].name;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//x버튼 클릭 시 동작하는 메소드\r\n");
      out.write("		const fnImgDel = (e) => {\r\n");
      out.write("			//클릭된 태그 가져오기\r\n");
      out.write("			const ele = e.srcElement;\r\n");
      out.write("			//delFile속성 가져오기\r\n");
      out.write("			const delFile = ele.getAttribute(\"delFile\");\r\n");
      out.write("			\r\n");
      out.write("			for(let i = 0; i < originFiles.length; i++){\r\n");
      out.write("				if(delFile == originFiles.[i].boardFileNo){\r\n");
      out.write("					originFiles[i].boardFileStatus = \"D\";\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//부모요소인 div 삭제\r\n");
      out.write("			const div = ele.parentNode;\r\n");
      out.write("			$(div).remove();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/getBoard.jsp(71,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/getBoard.jsp(71,8) '${boardFileList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${boardFileList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/getBoard.jsp(71,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("boardFile");
      // /WEB-INF/views/board/getBoard.jsp(71,8) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<div style=\"display: inline-block; \r\n");
            out.write("									position: relative; width: 150px; height: 120px;\r\n");
            out.write("									margin: 5px; border: 1px solid #00f; z-index: 1;\">\r\n");
            out.write("									<input type=\"hidden\" id=\"boardNo");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" \r\n");
            out.write("										   value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<input type=\"hidden\" id=\"boardFileNo");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" \r\n");
            out.write("										   value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<input type=\"hidden\" id=\"boardFileName");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" \r\n");
            out.write("										   value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<input type=\"file\" \r\n");
            out.write("										id=\"changedFile");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("										name=\"changedFile");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" \r\n");
            out.write("										style=\"display: none;\"\r\n");
            out.write("										onchange=\"fnGetChangedFileInfo(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(", event)\">\r\n");
            out.write("									\r\n");
            out.write("									");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("										");
            if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("										<input type=\"button\" class=\"btnDel\" value=\"x\" \r\n");
            out.write("										delFile=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" \r\n");
            out.write("										style=\"width: 30px; height: 30px; position: absolute;\r\n");
            out.write("										right: 0px; bottom: 0px; z-index= 999; \r\n");
            out.write("										background-color: rgba(255, 255, 255, 0.1)\r\n");
            out.write("										color: #f00;\" onclick=\"fnImgDel(event)\">\r\n");
            out.write("										<p id=\"fileName");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('_');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("										style=\"display: inline-block; font-size: 8px; cursor: pointer;\"\r\n");
            out.write("										onclick=\"fnFileDown(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(',');
            out.write(' ');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">\r\n");
            out.write("											");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("										</p>\r\n");
            out.write("									</div>\r\n");
            out.write("								");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/board/getBoard.jsp(88,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.last }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<input type=\"hidden\" id=\"boardFileCnt\" \r\n");
          out.write("										name=\"boardFileCnt\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.count }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("											");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("											");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("										");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/board/getBoard.jsp(93,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("img${boardFile.boardFileCate eq 'image' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												<img id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('_');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("												src=\"/upload/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("												style=\"width: 100%; height: 100%; z-index: none; \r\n");
          out.write("												cursor: pointer;\" class=\"fileImg\" \r\n");
          out.write("												onclick=\"fnImageChange(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")\">\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												<img id=\"img");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('_');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("												src=\"/images/defaultFileImg.png\"\r\n");
          out.write("												style=\"width: 100%; height: 100%; z-index: none; \r\n");
          out.write("												cursor: pointer;\" class=\"fileImg\"\r\n");
          out.write("												onclick=\"fnImageChange(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardFile.boardFileNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")\">\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
